* Git
file status can be: untracked -> unmodified -> modified -> staged (index)
.gitignore - file that contain names of files, globs which wouldn't be included in repository
create repository:
  git init
add file to version control & add file to index for next commit (add to staged | update):
  git add <file>
status of each file in rep. (changed/unchanged/untracked), branch:
  git status
compare changed files
  git diff [--staged - diff indexed files]
make snapshot of indexed files 
  git commit [-a - without 'git add' for changed files] [-m ' ' - info]
      	     [--amend - replace last commit]
delete file from index and from working dir:
  git rm [--cached - delete only from index]
move file
  git mv <source> <target>
view commites log:
  git log [-p - show diff] [-2 - last 2 commit] [--stat - statistics]
      	  [--pretty=oneline - one line for each commit]
	  [--pretty=format:"%h - %an, %ar : %s"]
display remote-name for current rep. (default: origin)
  git remote [-v - list of all remote-names and URL's]
get all missing files from remote-name (update)
  git pull [server-name] | git fetch [remote-name]
push branch -  master on server - origin
  git push [server-name] [branch]
show information about remote rep. ()
  git remote show [remote-server]
associate a name to a remote server, for the git project of current dir:
  git remote add github https://github.com/xahlee/xah_emacs_init.git
* Emacs
** Unbinded keys
*** UNBINDED
    M-[
    M-]

*** UNUSEFUL:
    M-m back-to-indentation
    M-j comment-indent-new-line:c++

*** REBINDED:
    M-z old: zap-to-char; now: ace-jump

M-x describe-bindings

** Macroses
   Запись макроса:
   С-x (, F3
   Конец записи макроса:
   C-x ), F4
   Выполнение:
   C-x e (повтрорно е), F4
   Редактирование макроса:
   edit-kbd-macro (C-x C-k e)
   Применение макроса только для части текста:
   C-x C-k r
   
** Calc
   C-x * c | C-x * * - запуск в обычном режиме
   C-x * q - quick mode
   C-x * k - запуск в режиме keypad
   C-x * 0 - reset
   h k <com> - справка по команде
   h f <fun> - справка по функции
   h s - все клавиатурные привязки
   C-x * g - grab, копирует матрицу из буффера, и пересылает в одну строку
   C-x * r - копирует матрицу
   C-x * y - вставляет значение из вершины стека в буфер
   C-x * : - grab the rectangular region and compute the sums of its columns
   C-x * _ - grab the rectangular region and compute the sums of its rows
   m a - algebraic mode
   d B - big screen mode
   s s - сохраняет значение вершины стека в веденную переменную
   s k - сохраняет значение вершины стека в веденную переменную и удаляет её
   M-0-9 d f - округляет до заданного числа знаков
   d g - разделяет число запятыми
   = - разворачивает переменные в вершине стека
   U - undo
   D - redo
   d 1 - 10, d 6 - 16, d 8 - 8; 2#101011, 16#0xA2B
   
** Emacs Lisp.
eval-last-sexp
	Вычислить последнее символическое выражение перед текущим
    положением курсора. Возвращенное значение будет напечатано в эхо-области,
    если эта функция запущена без префикс-аргумента; если функция запущена с
    префикс-аргументом, то результат печатается в текущем буфере. Эта команда
    обычно привязана к сочетанию клавиш C-x C-e.

defun
	Define function (Определить функцию). Эта особая форма может включать
    до пяти частей --- имя, шаблон для аргументов, передаваемых в функцию,
    необязательную документацию, необязательное интерактивное объявление, и
    само тело функции. Например:
    
    (defun back-to-indentation ()
      "Переместить точку к первому видимому символу на линии."
      (interactive)
      (beginning-of-line 1)
      (skip-chars-forward " \t"))

interactive
	Объявить интерпретатору, что эта функция может использоваться
    интерактивно. За этой особой формой может следовать строка, состоящая из
    нескольких частей, о том, как передать информацию в эту функцию. В этой
    строке могут так же содержаться подсказки отображаемые в
    эхо-области. Части строки разделяются друг от друга символами новой
    строки `\n'.

    Наиболее часто используемые символы:

    b Имя существующего буфере.

    f Имя существующего файла.

    p Числовой префикс-аргумент. (Обратите внимание, что `p' набран в нижнем
      регистре).  r Точка и метка, как два числовых аргумента, самое
      маленькое первым. Это единственный символ, который сразу описывает
      два последовательных аргумента, а не один.

        See section `Code Characters for `interactive'' in The GNU Emacs Lisp
    Reference Manual, для более полного списка символов, предопределенных для
    interactive.

let
	Объявляет список переменных, которые будут использоваться внутри тела
    let, и присваивает им первоначальные значения, или nil или заданное
    программистом; затем вычисляет оставшиеся выражения в теле let и
    возвращает результат вычисления последнего из них. Внутри тела let
    интерпретатор Лиспа игнорирует переменные с теми же именами, которые
    существуют вне выражения let. Например:
    
    (let ((foo (buffer-name)) (bar (buffer-size))) (message "В этом буфере %s
        ровно %d characters."  foo bar))

save-excursion
	Запоминает значение точки, метки и текущего буфера перед
    вычислением тела этой особой формы. Затем восстанавливает их значения к
    первоначальным. Например:
    
    (message "Мы на расстоянии %d символов от начала буфера."  (- (point)
        (save-excursion (goto-char (point-min)) (point))))

if
	Вычисляет первый аргумент особой формы; если результат --- истинна,
    вычисляет второй аргумент; иначе вычисляет третий аргумент, если он
    существует.
	Особая форма if называется условной формой. В Emacs Лиспе существуют и
    другие условные формы, но if наиболее часто используемая. Например:
    
    (if (string= (int-to-string 19) (substring (emacs-version) 10 12))
	(message "Это 19 версия Emacs") (message "Это не 19 версия
             Emacs"))

equal
eq
	Проверяют два объекта на равенство. equal возвращает истину если два
    объекта имеют одинаковую структуру и содержание. Другая функция eq
    возвращает истину, если два аргумента на самом деле один и тот же объект.

< > <= >=
    Функция < проверяет, меньше ли ее первый аргумент чем второй.
Соответственно функция > проверяет больше ли ее первый аргумент чем
второй. <= проверяет меньше или равен первый аргумент второго и >=
соответственно больше либо равен первый аргумент второму. Эти функции
работают только с численными аргументами.

message
	Печатает сообщение в эхо-области. Длина сообщения ограничена только
    одной строкой. Первый аргумент --- это строка, которая может содержать
    символы `%s', `%d', `%c', на месте которых будут подставлены последующие
    аргументы функции message. Аргумент, подставляемый на место `%s', должен
    быть строкой или символом; на место `%d' подставляется число. Аргумент,
    который используется с `%c' тоже должен быть числом, оно будет напечатано
    как код для ASCII символа.

setq
set
	Функция setq устанавливает значением своего первого аргумента
    значение второго аргумента. Первый аргумент setq не вычисляется
    автоматически. Эту функцию можно использовать и сразу с несколькими
    аргументами. Другая функция set принимает только два аргумента, и после
    вычисления обоих назначает значению, возвращенному первым аргументом,
    значение, возвращенное вычислением второго аргумента.

buffer-name
	Используется без аргумента, возвращает имя буфера в виде строки.

buffer-file-name
	Используется без аргумента, возвращает имя файла, связанного с данным
    буфером.

current-buffer
	Возвращает текущий активный буфер Emacs --- это необязательно должен
    быть буфер, который отображен на экране.

other-buffer
	Возвращает недавно выбранный буфер.

switch-to-buffer
	Устанавливает буфер, который задан как аргумент активным для
    Emacs и одновременно отображает его в текущем окне. Обычно эта команда
    связана с C-x b.

set-buffer
	Переключает внимание Emacs на другой буфер. Не изменяет содержимое
    текущего окна Emacs.

buffer-size
	Возвращает число символов в текущем буфере.

point
	Возвращает значение текущей позиции курсора как целое, считая число
    символов с начала буфера.

point-min
	Возвращает минимально возможное значение точки в текущем
    буфере. Обычно 1, если не включено сужение.

point-max
	Возвращает максимально возможное значение точки в текущем
    буфере. Обычно конец буфера, если не включено сужение.
* Regexp's
  Special characters: `$', `^', `.', `*', `+', `?', `[', `]', `\'
  `.' - one single character except a newline.
  Ex: a.b = aqb
  `*' - postfix operator, matches preceding expression any number of times even
  no one.
  Ex: bq* = b = bqq = bqqq = ... | null or all
  `+' - postfix operator, must match preceding expression at least once.
  Ex: bq+ = bq = bqq = bqqq = ... | one or all
  `?' - postfix operator, must match the preceding expression either once
  or not at all.
  Ex: bq?r = br = bqr | null or one
  `*?' - match the shortest valid match
  Ex: bq* first match bqqq; bq*? first match b
  `+?' - match the shortest valid match
  Ex: bq+ first match bqqq; bq+? first match bq
  `??' - match the shortest valid match
  Ex: bq? first match bq; bq*? first match b
  
* Grep
  Ищет все слова, начинающиеся с use, в текущей папке, среди всех файлов:
  grep 'use.*' *
  grep '^#.*\.$' /etc/fstab

* Perl
  Каждая строка файла links передается в команду wget; $_ - дефолтный счетчик:
  perl -ne 'system("wget $_")' buf
  perl -e 'chomp(@file = <STDIN>); foreach (@file) { system("wget $_") }' < links
  Здесь тоже самое, в wget передается сразу весь массив @file в одну строку:
  perl -e 'chomp(@file = <STDIN>); system("wget @file")' < links
  Опции командной строки:
  -n - сгенирировать код: while (<>) { ... }
  -p - сгенирировать код: while (<>) { ... print; }
  -i~ - создание бекапа и обновление файла, без бекапа - -i
  -w - выводить предупреждения
  -e - далее следует исполняемый код ''
  
* Wine
  Create new win32 prefix (don't create folder before):
  WINEARCH=win32 WINEPREFIX=~/.wineprefixes/prefix winecfg
  win64 prefix:
  WINEPREFIX=~/.wineprefixes/prefix winecfg
  
  Run program from prefix x3:
  WINEARCH=win32 WINEPREFIX=~/.wineprefixes/x3 wine /home/max/.wineprefixes/x3/drive_c/Program\ Files/X3.Albion\ Prelude.v\ 1.1/X3TC.exe -language 7
  
  Run program with russian language:
  LANG=ru_RU.UTF-8 WINEARCH=win32 WINEPREFIX=~/.wineprefixes/morr wine setup.exe
  
  Install libs:
  WINEARCH=win32 WINEPREFIX=$HOME/.wineprefixes/prifix winetricks corefonts directx9 vcrun2005 vcrun2008 vcrun6
  
* Compilation and Debuging
** GDB
Точка останова:
  (b)reak [точка | функция]
Установка точки наблюдения (программа остановится, когда переменная изменится):
  watch [перем]
Удаление точк(и/eк) останова:
  delete [точк(а/и)]
Информация о точке останова:
  info breakpoints
Запуск программы (выполнение программы с самого начала):
  (r)un
Информация о выполненных командах и функциях:
  (b)ack(t)race
Вывод переменной один раз:
  (p)rint [перем]
Вывод переменной на каждом шаге:
  display [перем]
Выполнение одного шага и возврат управления отладчику:
  (s)tep [число шагов]
Выполнение одного шага без перехода к какой-либо ф-ии:
  (n)ext [число шагов]
Пропускает функцию и выводит ее возвращаемое значение:
  finish
Продолжить выполнение программы (можно предварительно добавить еще
одну точку останова в другое место программы):
  (c)ontinue
Устанавливает значение для какой-либо переменной:
  set j=5
Прерывание любой выполняющейся команды и возвращение в gdb:
  C-c
    
** WIN API compile and link
  i586-mingw32msvc-gcc start.c -o start.exe
For run in windows: 
  i586-mingw32msvc-gcc -mwindows api.cpp -o api.exe
The project compilation: 
  i586-mingw32msvc-gcc rctm.cpp resource.h
If there is a *.rc file (resource script):
  i586-mingw32msvc-windres rctm.rc rctmrc.o
  i586-mingw32msvc-gcc -mwindows resource.h rctm.o rctmrc.o -o timer.exe
  
** MONO
  gmcs hello.cs
  gmcs hello.cs -pkg:dotnet
  mono hello.exe

* Basic shell commands
** File/Directory Manipulation
List files in current directory:
> ls 
List all files in current dir, including dot files:
> ls -al
Show file name matching <string>:
> ls -al | grep <string>
Change directory:
> cd <dirpath>
Go to $HOME dir:
> cd
Show the current dir:
> pwd

Create a new file (or updating timestamp of a existing file):
> touch <filename>
Delete a file:
> rm <filename>
Delete a dir:
> rm -r <dirname>
Copy a file:
> cp <filename> <new filename>
Copy a dir:
> cp -r <dirname> <new name>
Create a new dir:
> mkdir <new dir name>
Delete a dir only if it is empty:
> rmdir <dirname>
Rename file, or move to a diff dir:
> mv <filename> <new name>
Show dir size. (Linux: Directory Size: du Command):
> du -sh <dirname>

** Viewing Files
View a file:
> cat <filename>
View a file by page. Type [q] to exit. Type [h] for other keys. more can also be less; the latter is better:
> cat <filename> | more
View a file. Type [Esc : q] to exit:
> vi <filename>
View the first few lines of a (big) file. (to get a idea what the heck the file contains):
> head <filename>
View the last few lines of a file:
> tail <filename>
View the last few lines of a growing file, updated continuously. Typically used on log files:
> tail -f <filename>
Report what type of file it is:
> file <filename>

** Locating Commands
Show if <cmd name> is a shell built-in or standalone program. e.g. type kill. “type” is a bash built-in:
> type <cmd name>
Show full path of a command, useful for checking if a program is installed, or if it's in the search path in $PATH environment variable:
> which <cmd name>
View documentation of a command. [q] to exit. [h] for help:
> man <cmd name>
Search man pages:
> apropos <string>
Find a file by name (using the database see man updatedb). This is similar to find <many dir paths> -name "*<search string>*" but much faster:
> locate <search string>
Update the database used by locate:
> updatedb

** Archive, Compression {tar, gzip}
Archive a folder:
> tar cvf <new name.tar> <dirpath>
Unarchive:
> tar xvf <filename.tar>
To compress a file:
> gzip <filename>
Decompress a file:
> gzip -d <filename>

** Managing Process
View running processes:
> ps -ef
Find a particular process:
> ps -ef | grep <name>
Quit a program that has process id <pid>:
> kill <pid>
Force quit a process:
> kill -s 9 <pid>
Monitor processes with continuous update. q to quit:
> top
Show the process parent-child relationship:
> pstree

** Job Control
Start a program in background. e.g. emacs &:
> <cmd> &
Stop a command. (sending SIGINT to it) e.g. you did emacs and forgot the &, press [Ctrl+c] to start over:
> [Ctrl+c]
Suspend a command. (sending SIGTSTP to it):
> [Ctrl+z]
Run the suspended command in background:
> bg %<number>
Resume a background process to foreground:
> fg %<number>
Seperate a job process id 1 from jobs:
> disown %1
List background processes:
> jobs

** Sys Admin
Create a new user account. (On Debian based linuxes, there's higher-level “adduser” written in perl.):
> useradd <user name>
Change password for user:
> passwd <user name>
Show the id number of a user, and all groups he belongs to:
> id <user name>
List all users:
> cat /ect/passwd
List all groups. See getent --help:
> getent group

Change the perm bits. (664 = rw-rw-r--; typical text file perm bits):
> chmod 664 <filename>
Change owner of a file:
> chown <user name> <filename>
Change the group of a file:
> chgrp <group name> <filename>
Make a symbolic link of a file. (symbolic is file that contains the path of another file.):
> ln -s <new name> <filename>
Create hard link of a file. (Hard link makes 2 files pointing to the same index in the file system (hard disk).):
> ln <new name> <filename>
Restart machine now. (power off is -P):
> shutdown -r 0

Show current date and time:
> date
Show time stamp in this format: “yyyy-mm-dd hh:mm:ss-07:00” the last are time offset to UTC:
> date --rfc-3339=seconds
Show who is logged in:
> w
List all users that have logged in recently:
> who -a
Show how long the system's been running:
> uptime
Count the number of chars, words, lines. useful with cat, grep:
> wc

Execute a shell file <shell file>. source <shell file> is equivalent to . <shell file>:
> source <shell file>
Start a new bash. [Ctrl+d] to exit when done:
> bash
View value of a environment variable:
> echo $PATH
Show all environment variables:
> env
Make <str> as shortcut for <cmd>. e.g. alias l="ls -al --color":
> alias <str>="<cmd>";

** Generic Useful Bash Syntax
A asterisk “*” means any character. *.txt means all files ending in “.txt”. Can be used for any command that takes list of files or dir. See man 7 glob:
> <cmd> *.txt
Pass the output of <cmd1> to the input of <cmd2>:
> <cmd1> | <cmd2>
Feed the content of <filename> to the input of <cmd>:
> cat <filename> | <cmd>
Write the output to fill:
> <cmd> > <filename>
Append output to fill:
> <cmd> >> <filename>
Join contents of <filename1> <filename2> to <new filename:
> cat <filename1> <filename2> > <new filename>
Run several commands:
> <cmd1>; <cmd2>; …
Run <cmd1>, if success, then run <cmd2> (otherwise stop.) (the && is a logical “and” operator. Unix commands returns 0 if success, else a integer error code:
> <cmd1> && <cmd2>
Fenerate the output of <cmd> and use it in your whole command. e.g. ls -l `which more:
> … `<cmd>` …
Run a command in background:
> … &

* Other
** Home Network
   win7home     192.168.0.100 00:1E:90:B8:1C:F5
   tparch	192.168.0.101 60:67:20:D7:05:88
   win7work     192.168.0.102 00:C0:A8:FF:94:72
   eeepc	192.168.0.103 1C:4B:D6:85:1C:6A
   androidphone 192.168.0.104 68:9C:5E:BB:56:C7
   
** TODO fontconfig setting
> Infinality environment variables are located in the file /etc/profile.d/infinality-settings.sh. Change it according to your taste.
==> Fontconfig files have moved to fontconfig-infinality package which should be installed and configured separately.
==> For best experience, install either Windows, Apple or Google fonts. More information is available at http://www.infinality.net.
Optional dependencies for freetype2-infinality
    fontconfig-infinality: Infinality package for fontconfig (required)
==> WARNING: Building package as root is dangerous.
 Please run yaourt as a non-privileged user.
==> Determining latest git revision...
  -> Version found: 20130216
==> Making package: fontconfig-infinality-ultimate 20130216-1 (Sat Feb 16 01:35:12 MSK 2013)
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Retrieving Sources...
==> Extracting Sources...
==> Starting package()...
==> Connecting to GIT server....
==> First time connected - cloning repo, this may take a while...
Cloning into 'fontconf'...
remote: Counting objects: 398, done.
remote: Compressing objects: 100% (200/200), done.
remote: Total 398 (delta 235), reused 357 (delta 194)
Receiving objects: 100% (398/398), 1.30 MiB | 447 KiB/s, done.
Resolving deltas: 100% (235/235), done.
==> GIT checkout done or server timeout
==> Tidying install...
  -> Purging unwanted files...
  -> Compressing man and info pages...
  -> Stripping unneeded symbols from binaries and libraries...
==> WARNING: backup entry file not in package : etc/fonts/conf.d/52-infinality.conf
==> Creating package...
  -> Generating .PKGINFO file...
  -> Adding install file...
  -> Compressing package...
==> Finished making: fontconfig-infinality-ultimate 20130216-1 (Sat Feb 16 01:35:21 MSK 2013)

==> Continue installing fontconfig-infinality-ultimate ? [Y/n]
==> [v]iew package contents [c]heck package with namcap
==> ---------------------------------------------------
==> y

loading packages...
resolving dependencies...
looking for inter-conflicts...

Targets (1): fontconfig-infinality-ultimate-20130216-1

Total Installed Size:   0.34 MiB

Proceed with installation? [Y/n] 
(1/1) checking package integrity                                                     [################################################] 100%
(1/1) loading package files                                                          [################################################] 100%
(1/1) checking for file conflicts                                                    [################################################] 100%
(1/1) checking available disk space                                                  [################################################] 100%
(1/1) installing fontconfig-infinality-ultimate                                      [################################################] 100%

  CAUTION: Manual action required
  -------------------------------

  A new Infinality runtime file has been installed as

  || /etc/profile.d/infinality-settings.sh.pacnew

  Please, replace manually any other instance of this file with the
  new one.

  Further information
  -------------------

  In order to avoid conflicts, most generic fontconfig files, as found
  in /etc/fonts/conf.d, should be removed and replaced by their 
  equivalents from fontconfig-infinality-ultimate package.
  
  The minimal working configuration should consist of the following files:

  || /etc/fonts/conf.d/49-sansserif.conf
  || /etc/fonts/conf.d/50-user.conf
  || /etc/fonts/conf.d/51-local.conf
  || /etc/fonts/conf.d/52-infinality.conf

  If you have installed TeX Live from Arch Linux [extra] repository,
  you will need

  /etc/fonts/conf.d/09-texlive-fonts.conf

  in order to access TrueType and OpenType fonts shipped with TeX Live.
  Similarly, you should *not* remove any file created and/or needed by
  applications you are using. For example, this is the case with KDE
  which by default creates

  || /etc/fonts/conf.d/00kde.conf

  In most cases such additional config files provide access to fonts 
  installed in non-standard locations and don't affect freetype2 
  rendering settings.

  Font specific .conf files installed as a part of font packages (i.e.
  ttf-dejavu, ttf-liberation, ttf-droid, etc.) must be disabled as
  fontconfig-infinality-ultimate should already provide support for most
  typefaces available in Arch repositories.

  || Please, back up your /etc/fonts directory now and commit all 
  || required changes manually as described above.

** Add efi record
   efibootmgr -c -g -d /dev/sdb -p 1 -L "rEFInd" -l '\EFI\opensuse\grubx64.efi'
** Recursive download  
  wget -r -l 2 http://vsokovikov.narod.ru/New_MSDN_API/Process_thread/ogl_process.htm

** Создание zip архива
  zip -r -9 name.zip dir1 file1 dir2 file2

** File convert from WINDOWS-1251(ANSI) to UTF-8
   iconv -f WINDOWS-1251 -t UTF-8 X3.txt > X3_new.txt
   Emacs:
   C-x <RET> f utf-8-unix  
** Genisoimage
Позволяет создавать следующие типы ISO-образов:
Загрузочные (boot).
С расширениями Rock Ridge. Эти расширения предназначены для операционных систем семейства Linux, а именно для работы прав доступа пользователей.
С расширениями Joliet. Joliet-расширения не являются частью стандарта ISO9660. Эти расширения, в основном, используются в ОС Windows при записи дисков. Характерным для Joliet-расширений является: unicode-имена файлов и директорий, длина одного компонента пути может быть до 64 unicode-символов. 

Создание образа:
  genisoimage -iso-level 4 -J -o myimage.iso ~/music
    	-iso-level 4 указывает не накладывать ограничения на длину имени файла и вложенность директорий.
    	-J указывает использовать Joliet-расширения (если диск будет использоваться на ОС Windows).
    	-o задаёт имя конечного образа.
    	~/music задаёт папку, которая будет рекурсивно включена в образ.

Растягивает игры с разрешением 800х600 на весь экран:
  xrandr --output LVDS1 --set "scaling mode" "Full"
Наоборот:
  xrandr --output LVDS1 --set "scaling mode" "Full aspect"
Wine msi:
  wine msiexec /i whatever.msi
	
** Remember
Карта № 2938494461    

** Ankii
disere - желание
sequence
ubiquitous
various
involved
beyond
thereby
retrieve
route
negotiate
reside
privacy
statement
enterprise
allocate
scarce
beneficial
election
crews
scheduling
exhibit
challenge
facilitate
encounter
certain
overall
bounded
wisely,
roughly
impact
approach
permutation
employ
essence
held
composedunits
dereferencing - разыменование = indirection - косвенное обращение



* Games track
 + Wasteland 2 [kickstarter]
 + X Rebirth
 + Torment: Tides of Numenera [kickstarter]
 + Project Eternity [kickstarter]
 + The Age of Decadence [Rim][fallout-like]
* ERC log
[Sat Apr  6 2013]
--- You have joined channel #qet  [21:02]
--- Topic for #qet: #qet : Salon IRC dйdiй а QElectroTech - les schйmas
---    йlectriques ne sont pas des schйmas йlectroniques | version 0.3 alpha
---    released
--- #qet: topic set by xavier, 2012-05-13 04:25:23
--- Users on #qet: max scorpio810 youssef david_666 joshua RemiFedora cfdev
---    slowbrain misric scorpio nishiki xavier 
--- #qet modes: +n
--- #qet was created on 2010-12-19 03:22:35
---<youssef> Hello max
---<max> hi!  [21:03]
ERC> /nick fleshlight
--- Your new nickname is fleshlight
<youssef> welcome fleshlight
<youssef> scorpio, xavier I have invited fleshlight who is interrested in
	  programming  [21:04]
<fleshlight> thanks:)
<fleshlight> yes, hi to all
<youssef> let me introduce you the other people
<youssef> xavier and slowbrain are the founder of the project. xavier is or
	  retired lead programmer and manager of the project  [21:05]
<xavier> Hi fleshlight 
<xavier> nice nickname :')
<fleshlight> hi xavier
<youssef> now, scorpio, cfdev and joshua are contributing to the code
<fleshlight> i know  [21:06]
<youssef> we have also packagers, symbol drawers and other contributors in
	  this channel
<xavier> and I am running for my freedom
<xavier> having let a pile of code that need some love...
<xavier> needs*
<xavier> That's C++/Qt4; many things can be rewritten and refactored freely
	 since I will not be there anymore to justify why this or that was
	 made this way  [21:07]
<xavier> Oh, also, there are still many French comments, so the game is kinda
	 "gotta translate em all" ...  [21:08]
<fleshlight> hah  [21:09]
<fleshlight> http://svnweb.tuxfamily.org/listing.php?repname=qet/qet
<fleshlight> is this your svn repository?
<xavier> Still, most contributors, especially those around, speak French
	 natively, so they can help
<xavier> yep
- youssef is going to eat and will be back later  [21:10]
<scorpio810> hi fleshlight
<fleshlight> hi scorpio810 
<fleshlight> so, from where i can start?  [21:11]
<cfdev> hi everybody :)
<cfdev> oua english speak  [21:12]
<fleshlight> hi
<xavier> I guess diving a bit in the code (start with main.cpp, QETApp,
	 QET{Diagram,Element}Editor, etc.) would help you getting an idea of
	 the current shape of QET; also, trying the software itself, may help
								        [21:13]
<cfdev> <fleshlight> so, from where i can start? : scorpio810 ?
<xavier> next, scorpio810, cfdev and joshua recently started working on new
	 features
<xavier> (right after my departure announce)
<xavier> so they may explain what they are trying to achieve  [21:14]
<xavier> Most exchanges related to the development occur here, btw  [21:15]
<xavier> the forum just gathers news and some end-users questions, the mailing
	 list is mainly used to remain informed of commits  [21:16]
<scorpio810> <cfdev> <fleshlight> so, from where i can start? : scorpio810 ? i
	     dont know easy, difficult ?  [21:28]
<fleshlight> now i will try to understand program code  [21:31]
<scorpio810> ok :)  [21:33]
<xavier> fleshlight: by the way, what language / toolkits / frameworks / libs
	 do you usually work with?  [21:43]
<fleshlight> c++, perl, a bit java, now i learn opengl for my diploma  [21:46]
<xavier> Nice
<xavier> Any former experience with Qt?
<fleshlight> no
<xavier> Don't worry, once you know C++, it's a very pleasant toolkit  [21:48]
<xavier> (though some parts are not as polished/maintained as we would need)
<fleshlight> and what libs do you use except Qt?  [21:50]
<xavier> Currently: zero.
<xavier> It's pure Qt
<xavier> Well, scorpio810 and cfdev bolted some kind of external rich text
	 editor into QET recently
<xavier> but it is Qt-based too.
--- RemiFedora (~remi@pom51-2-82-241-130-121.fbx.proxad.net) has quit: "Soyez
    sage en mon absence..."  [21:51]
<xavier> fleshlight: do your studies involve producing electric diagrams?
								        [21:53]
<fleshlight> we had course, that included it, we worked in program workbench
								        [21:56]
<xavier> ok
<xavier> that was the main issue with me... no use of what I was
	 programming...
<fleshlight> Electronics WorkBench :)  [21:57]
<scorpio810> i'm sorry, but i'm very tied tongnight 
<scorpio810> i'm sorry, but i'm very tied tongnight 5X8 equip  [21:59]
<xavier> 'night scorpio810 
<youssef> good night scorpio
<fleshlight> good night!
<scorpio810> thanks all  [22:00]
- youssef is back a bit later
--- scorpio810 (~laurent@214.194.98.84.rev.sfr.net) has quit: "Konversation
    terminated!"
<cfdev> xavier:  ?  [22:34]
<youssef> I have just discovered openhatch maybe a good place to recruit new
	  contributors. I am looking at the documentation  [22:38]
<cfdev> how to center the zoom in diagramview ?  [22:40]
ERC> /help  [22:44]
ERC> /away  [22:45]
--- Does this mean you're really back?
ERC> /bye  [22:46]
ERC>
