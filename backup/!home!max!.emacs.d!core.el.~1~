;;;;                     Emacs CORE configuration file
;; hide tool bar, menu bar, scroll bar
(tool-bar-mode nil)
(menu-bar-mode nil)
(scroll-bar-mode nil)

;; 
(require 'recentf)
(setq recentf-auto-cleanup 'never
      recentf-max-saved-items 100)
(recentf-mode t)

;; 
(ido-mode t)

;; color theme loading
(load "color-theme")
(color-theme-tango)

;; source code directory
(setq find-function-C-source-directory
      "/usr/share/emacs/23.4/lisp/emacs23-23.4+1/src/"
      source-directory  		; don't work
      "/usr/share/emacs/23.4/lisp/emacs23-23.4+1/lisp/")

;; registers points to files
(set-register ?i '(file . "~/.emacs.d/init.el"))
(set-register ?f '(file . "~/foo"))
(set-register ?z '(file . "~/.zshrc"))

;; yes -> y, no -> n, return -> yes
(fset 'yes-or-no-p 'y-or-n-p)
(define-key query-replace-map [return] 'act)

;; replacement selected region
(delete-selection-mode t)

;; scrolling settings
(setq scroll-conservatively 50 scroll-margin 2)

;; brackets highlight
(show-paren-mode 1)

;; 
(setq skeleton-pair t)
(global-set-key "(" 'skeleton-pair-insert-maybe)
(global-set-key "[" 'skeleton-pair-insert-maybe)
(global-set-key "{" 'skeleton-pair-insert-maybe)
(global-set-key "\"" 'skeleton-pair-insert-maybe)


;;; KEYS
;; kill emacs process
(defun max-kill-emacs ()
  (interactive)
  (save-some-buffers)
  (kill-emacs))

(global-set-key (kbd "C-x c") 'max-kill-emacs)

;; switch to next window
(global-set-key (kbd "<C-tab>") 'other-window)

;; windows manipulations
(global-set-key (kbd "C-'") 'delete-other-windows)
(global-set-key (kbd "M-'") 'delete-window)
(global-set-key (kbd "C-M-'") 'kill-buffer-and-window)

;; switch to last selected buffer
(global-set-key (kbd "C-;") '(lambda ()
			       (interactive)
			       (switch-to-buffer (other-buffer))))

;; configure movement to begin/end of buffer
(global-set-key (kbd "M-<") 'tags-loop-continue)
(global-set-key (kbd "M->") 'find-tag)
(global-set-key (kbd "M-,") 'beginning-of-buffer)
(global-set-key (kbd "M-.") 'end-of-buffer)

;; switching between buffers
(global-set-key (kbd "C-.") 'iswitchb-buffer)

;; ibuffer
(global-set-key (kbd "C-x C-b") 'ibuffer)

;; kill current buffer without request
(global-set-key (kbd "C-x k")
		'(lambda () (interactive) (kill-buffer (current-buffer))))

;; ะก-h <-> Backspace
(define-key key-translation-map [?\C-h] [?\C-?])

